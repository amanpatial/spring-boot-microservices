#spring.application.name=UserService
#spring.cloud.config.uri=http://localhost:8761
#eureka.client.serviceUrl.defaultZone:http://localhost:8761/eureka
security.basic.enable: false
management.security.enabled: false

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
# spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
# spring.jpa.hibernate.ddl-auto=create-drop
# Allows Hibernate to generate SQL optimized for a particular DBMS
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.DerbyDialect

# ===============================
# MYSQL
# ===============================

# Datasource connection properties
 spring.datasource.url = 
 spring.datasource.username=root
 spring.datasource.password=root$12345
 spring.datasource.hikari.maximum-pool-size=2
# Keep the connection alive if idle for a long time (needed in production)
 spring.datasource.testWhileIdle = true
 spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect